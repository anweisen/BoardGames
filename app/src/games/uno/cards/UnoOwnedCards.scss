.UnoOwnedCards {
	display: flex;
	flex-direction: row;
	position: relative;
	padding: 10px;

	overflow: hidden;
	//width: 100dvw;

	//transform-style: preserve-3d;
	//perspective: 1000px;

	.UnoCard {
		//transform: rotateX(5deg);
		transition: margin-left 0.1s cubic-bezier(0, 0.5, 0.75, 1),
		margin-right 0.1s cubic-bezier(0, 0.5, 0.75, 1),
		margin-bottom 0.25s cubic-bezier(0, 0.5, 0.75, 1),
		transform 0.1s ease-in-out,
		filter 0.1s ease-in-out;

		position: relative;
		filter: drop-shadow(0 0 5px rgba(0, 0, 0, 0.8));

		$width: 14dvh;
		width: $width;
		padding-top: 25px; // extra space when highlighting cards to the top
		svg {
			width: 100%;
			height: auto;
		}

		&:not(:first-child) {
			margin-left: -$width*.45; // hide 45%
		}

		&:hover + .UnoCard {
			//margin-left: -$width*.35; // hide 35%
		}

		&:hover {
			transform: translateY(-$width*.05) rotate(1.5deg);
			filter: drop-shadow(0 5px 6px rgba(0, 0, 0, 0.9));
		}

		&.Fade {
			animation: fade .25s ease-out forwards;
		}

		&.Fade + .UnoCard {
			animation: follow-left .25s .25s ease-out forwards;
		}

		&:first-child.Fade + .UnoCard {
			animation: follow-left-end .25s .25s ease-out forwards;
		}

		&:has(+ .Fade) {
			animation: follow-right .25s .25s ease-out forwards;
		}

		&.Drawn {
			animation: spawn-own-card .3s ease backwards;

			@for $i from 1 through 100 {
				&.Drawn#{$i} {
					animation-delay: calc(.125s * min(7, (var(--drawn) - $i)));
				}
			}
		}

		@keyframes spawn-own-card {
			from {
				transform: translateY(-25px);
				opacity: 0;
			}
			30% {
				opacity: 1;
			}
		}

		@keyframes fade {
			50% {
				opacity: 1;
			}
			to {
				transform: translateY(-65px);
				opacity: 0;
			}
		}

		@keyframes follow-left {
			to {
				margin-left: -$width*.5;
			}
		}
		@keyframes follow-left-end {
			to {
				margin-left: -$width;
			}
		}
		@keyframes follow-right {
			to {
				margin-right: -$width*.5;
			}
		}
	}

	&.Current .UnoCard {
		&.Usable {
			margin-bottom: 20px;
		}

		&:not(.Usable) {
			filter: brightness(70%);
		}
	}

	&:not(.Current) {
		filter: brightness(45%);
	}
}