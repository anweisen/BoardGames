.Overview {
	padding: 5dvh 25dvw;
	margin: auto 0;
	display: flex;
	flex-direction: column;
	gap: 50px;

	@media (width <= 1000px) {
		padding: 5dvh 12.5dvw;
	}
	@media (width <= 750px) {
		padding: 5dvh 7.5dvw;
	}

	.Category {

		.Title {
			display: flex;
			justify-content: space-between;

			.Left {
				margin-left: 5px;
				color: rgba(255, 255, 255, 0.9);
				font-family: 'Poppins', sans-serif;
				font-size: 24px;
				font-weight: 500;

				display: flex;
				gap: 10px;

				p {
					margin: auto 0;
					font-size: 15px;
					color: rgba(255, 255, 255, 0.45);
					display: flex;
					gap: 1px;

					&::before {
						content: "(";
					}

					&::after {
						content: ")";
					}
				}
			}

			.Right {
				display: flex;
				flex-direction: row;
				gap: 10px;
				font-family: "Roboto", sans-serif;

				color: rgba(255, 255, 255, 0.4);

				svg {
					margin: auto 0;
					font-size: 30px;
				}

				.Time {
					margin: auto 0;
					font-size: 17px;

					&::after {
						content: "s";
					}
				}
			}

		}

		.Cards {
			margin-top: 15px;
			gap: 15px;
			display: flex;
			flex-direction: column;

			.LobbyCard {
				display: grid;
				padding: 10px 20px;
				box-shadow: 1px 1px 3px rgba(0, 0, 0, .4);
				background: rgba(0, 0, 0, .05);
				border-radius: 8px;
				color: rgba(255, 255, 255, 0.9);
				font-family: 'Quicksand', sans-serif;
				font-size: 18px;

				grid-template-rows: 1fr;
				grid-template-columns: auto auto 1fr auto 25px auto;
				grid-template-areas: "icon name _ game __ players";
				column-gap: 7px;

				* svg {
					margin: auto;
					font-size: 20px;
				}

				.Status {
					grid-area: icon;
					display: flex;
					color: var(--text-dimmed);
				}

				.Name {
					grid-area: name;
				}

				.Game {
					grid-area: game;
					width: 50px;
					height: 20px;
				}

				.Players {
					grid-area: players;
					display: flex;
					gap: 5px;
				}

				animation: spawn-card .45s cubic-bezier(.4, .75, .64, .99);

				@keyframes spawn-card {
					from {
						transform: translateY(-15px);
						opacity: 0.1;
					}
				}

				transition: padding .25s ease, transform .2s ease;

				&:hover {
					padding: 10px 25px;
					//transform: translateY(3px);
				}
			}

			.GameCard {
				padding: 10px 15px;
				border-radius: 15px;
				width: 125px;
				filter: drop-shadow(1px 1px 3px rgba(0, 0, 0, 0.5));

				@media (width <= 1000px) {
					width: 100px;
					padding: 8px 12px;
				}

				svg {
					width: 100%;
					height: auto;
					transition: transform .2s ease;
				}

				&:hover svg {
					transform: scale(1.05);
				}

				animation: game-fade-in .25s cubic-bezier(.4, .75, .64, .99) backwards;

				@keyframes game-fade-in {
					from {
						opacity: 0;
						transform: translateX(-10px);
					}
				}

				@for $i from 1 through 10 {
					&:nth-child(#{$i}) {
						animation-delay: ($i - 1) * .2s;
					}
				}
			}
		}

		&.Games .Cards {
			flex-direction: row;
			flex-wrap: wrap;
		}

	}

	&:has(.Error) {
		height: 100%;
		width: 100%;
		display: grid;
		place-items: center;
		box-sizing: border-box;
	}

	.Empty, .Error {
		color: var(--text-dimmed);
		display: flex;
		gap: 15px;

		&.Error {
			flex-direction: column;
			text-align: center;
			svg {
				margin: auto;
			}
		}

		@media (max-width: 400px) {
			gap: 8px;
		}

		animation: empty-fade-in .45s cubic-bezier(.4, .75, .64, .99);

		@keyframes empty-fade-in {
			from {
				transform: translateY(15px);
				opacity: 0.1;
			}
		}

		svg {
			width: 65px;
			height: auto;
			color: var(--svg-dimmed);
			filter: drop-shadow(1px 1px 5px rgba(0, 0, 0.9));

			@media (max-width: 600px) {
				width: 60px;
			}
			@media (max-width: 400px) {
				width: 50px;
			}
		}

		span {
			margin: auto 0;
			font-family: "Poppins", sans-serif;
			font-size: 17px;
			@media (max-width: 600px) {
				font-size: 15px;
			}
			@media (max-width: 400px) {
				font-size: 13.5px;
			}

			a {
				color: var(--primary);
				position: relative;
				display: inline-block;
			}

			a::after {
				content: '';
				position: absolute;
				width: 100%;
				transform: scaleX(0);
				height: 1px;
				bottom: 0;
				left: 0;
				background-color: currentColor;
				transform-origin: bottom right;
				transition: transform 0.25s ease-out;
			}

			a:hover::after {
				transform: scaleX(1);
				transform-origin: bottom left;
			}
		}
	}
}
